apply plugin: 'com.android.dynamic-feature'
apply plugin: 'kotlin-android'
apply plugin: "com.jaqxues.pack-compiler"

android {
    compileSdkVersion 29


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            proguardFiles 'proguard-rules.pro'
        }
    }


    // To inline the bytecode built with JVM target 1.8 into
    // bytecode that is being built with JVM target 1.6. (e.g. navArgs)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.0.0-alpha06"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':app')

    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'
}

packCompiler {
    attributes = [
            Flavor           : "prod",
            Development      : true,
            PackVersion      : "1.0.0",
            PackVersionCode  : 1,
            MinApkVersionCode: 1,
            PackImplClass    : "com.jaqxues.sniptools.packimpl.PackImpl",
            ScVersion        : "11.4.1.64",
    ]
    getJarName = { attributes ->
        return "Pack_${attributes["PackVersion"]}_${attributes["ScVersion"]}".toString()
    }
    adbPush = {
        defaultPath = "/storage/emulated/0/"
        directory = "SnipTools/Packs"
        deviceConfigFile = file("../Secrets/AdbPushConfig.json")
    }
}


afterEvaluate {
    android.applicationVariants.forEach { aV ->
        def aVNameCap = aV.name.capitalize()
        def appPkg = "com.jaqxues.sniptools"
        def snapPkg = 'com.snapchat.android'

        /**
         * Task to activate the Pack and apply Changes in Snapchat (Testing Xposed Code)
         */
        task("applyPackChanges$aVNameCap") {
            dependsOn "adbPushPack$aVNameCap"
            group "install"

            doLast {
                exec { commandLine android.adbExecutable, 'shell', 'am', 'force-stop', snapPkg }
                exec {
                    commandLine android.adbExecutable, 'shell', 'am', 'start', '-n',
                            "$appPkg/.MainActivity", '--es', 'select_new_pack',
                            tasks.getByName("adbPushPack$aVNameCap").outputs.files.singleFile.name
                }
                sleep(200)
                exec {
                    commandLine android.adbExecutable, 'shell', 'am', 'start', '-n',
                            "$snapPkg/.LandingPageActivity"
                }
            }
        }

        /**
         * Task to activate the Pack and apply Changes in the App itself (Testing Pack UI Code)
         */
        task("openPackChanges$aVNameCap") {
            dependsOn "adbPushPack$aVNameCap"
            group "install"

            doLast {
                exec { commandLine android.adbExecutable, 'shell', 'am', 'force-stop', appPkg }
                exec {
                    commandLine android.adbExecutable, 'shell', 'am', 'start', '-n',
                            "$appPkg/.MainActivity", '--es', 'select_new_pack',
                            tasks.getByName("adbPushPack$aVNameCap").outputs.files.singleFile.name
                }
                sleep(800)
                exec { commandLine android.adbExecutable, 'shell', 'am', 'force-stop', appPkg }
                exec {
                    commandLine android.adbExecutable, 'shell', 'am', 'start', '-n',
                            "$appPkg/.MainActivity"
                }
            }
        }
    }
}
